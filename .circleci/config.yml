version: 2.1

defaults: &defaults
  working_directory: ~/snyk-iac-custom-rules

commands:
  install_shellspec:
    description: Install Shellspec
    steps:
      - run: curl -fsSL https://git.io/shellspec | sh -s -- -y
      - run: sudo ln -s ${HOME}/.local/lib/shellspec/shellspec /usr/local/bin/shellspec
      - run: sudo apt-get install jq
  build:
    description: Build Golang CLI
    steps:
      - run:
          name: Build
          command: go build -o snyk-iac-custom-rules .
      - persist_to_workspace:
          root: ./ # relative to the working directory
          paths:
            - snyk-iac-custom-rules # the file we want to store

jobs:
  lint_and_format:
    <<: *defaults
    description: Lint & formatting
    docker:
      - image: golangci/golangci-lint:v1.41
    steps:
      - checkout
      - attach_workspace:
          at: ~/snyk-iac-custom-rules
      # Logs the version in our build logs, for posterity
      - run: go version
      - run:
          name: "Ensure go.mod is tidy"
          command: |
            go mod tidy
            git diff --exit-code go.mod go.sum
      - run:
          name: "Run golangci-lint"
          command: golangci-lint run -v --timeout 10m
      - run:
          name: "Run gofmt"
          command: "! gofmt -d -e . | read"
  regression-test:
    <<: *defaults
    docker:
      - image: circleci/golang:1.16-node
    steps:
      - checkout
      - install_shellspec
      - build
      - run:
          name: Run shellspec
          command: shellspec
      - run:
          name: Run Golang tests
          command: go test ./...

workflows:
  version: 2
  test:
    jobs:
      - lint_and_format:
          name: Lint & formatting
          filters:
            branches:
              ignore:
                - main
                - develop
      - regression-test:
          name: Regression Test
          filters:
            branches:
              ignore:
                - main
                - develop
