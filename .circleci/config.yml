version: 2.1

orbs:
  snyk: snyk/snyk@1.1.1

defaults: &defaults
  working_directory: ~/snyk-iac-rules

commands:
  install_shellspec:
    description: Install Shellspec
    steps:
      - run: curl -fsSL https://git.io/shellspec | sh -s -- -y
      - run: sudo ln -s ${HOME}/.local/lib/shellspec/shellspec /usr/local/bin/shellspec
      - run: sudo apt-get install jq
  build:
    description: Build Golang CLI
    steps:
      - run:
          name: Build
          command: go build -o snyk-iac-rules .
      - persist_to_workspace:
          root: ./ # relative to the working directory
          paths:
            - snyk-iac-rules # the file we want to store

jobs:
  lint_and_format:
    <<: *defaults
    description: Lint & Formatting
    docker:
      - image: golangci/golangci-lint:v1.42
    steps:
      - checkout
      - attach_workspace:
          at: ~/snyk-iac-rules
      # Logs the version in our build logs, for posterity
      - run: go version
      - run:
          name: "Ensure go.mod is tidy"
          command: |
            go mod tidy
            git diff --exit-code go.mod go.sum
      - run:
          name: "Run golangci-lint"
          command: golangci-lint run -v --timeout 10m
      - run:
          name: "Run gofmt"
          command: "! gofmt -d -e . | read"
  regression-test:
    <<: *defaults
    docker:
      - image: circleci/golang:1.17
    steps:
      - checkout
      - install_shellspec
      - build
      - setup_remote_docker:
          version: 19.03.13
          docker_layer_caching: true
      - run:
          name: Login to Docker Hub
          command: echo $OCI_REGISTRY_PASSWORD | docker login -u $OCI_REGISTRY_USERNAME --password-stdin
      - run:
          name: Run shellspec
          command: shellspec "spec/e2e"
      - run:
          name: Run Golang tests
          command: go test ./...
  security-oss:
    parameters:
      # Allow monitor to be enabled for certain test runs. e.g main/develop
      monitor-on-build:
        type: boolean
        default: false
    docker:
      - image: cimg/go:1.17.2 
    steps:
      - checkout
      - snyk/scan:
          severity-threshold: medium 
          monitor-on-build: << parameters.monitor-on-build >>
          project: ${CIRCLE_PROJECT_REPONAME}
          organization: snyk-iac-group-seceng
          additional-arguments: "--project-reference='<< pipeline.git.branch >>'"
      # duplicate because snyk can only send to one org at a time :(
      - snyk/scan:
          monitor-on-build: << parameters.monitor-on-build >>
          project: snyk/snyk-iac-rules
          organization: appsec-playground
          fail-on-issues: false
          # the token-variable option cannot be used here because the default
          # environment variable called SNYK_TOKEN provided as part of the
          # snyk-iac-eng context will always override it so as a workaround
          # we use this unsupported `--api` flag to take precedence over the
          # both the `snyk auth` value and the environment.
          # see: https://github.com/snyk/snyk-orb/issues/65
          additional-arguments: "--api=$APPSEC_SNYK_TOKEN --project-reference='<< pipeline.git.branch >>'"
  security-code:
    docker:
      - image: cimg/go:1.17.2 
    steps:
      - checkout
      - snyk/scan:
          command: code test
          severity-threshold: medium 
          monitor-on-build: false
          project: ${CIRCLE_PROJECT_REPONAME}
          organization: snyk-iac-group-seceng
  lint_commit_message:
    docker:
      - image: circleci/node:14
    steps:
      - checkout
      - attach_workspace:
          at: ~/project
      - run:
          name: Define environment variable with lastest commit's message
          command: |
            npm install --save-dev @commitlint/config-conventional @commitlint/cli
            echo "module.exports = {extends: ['@commitlint/config-conventional']};" > commitlint.config.js
            echo 'export COMMIT_MESSAGE=$(git log -1 --pretty=format:"%s")' >> $BASH_ENV
            source $BASH_ENV
      - run:
          name: Lint Commit Message
          command: echo "$COMMIT_MESSAGE" | npx commitlint
workflows:
  version: 2
  test:
    jobs:
      - lint_commit_message:
          name: Lint commit message
          filters:
            branches:
              ignore:
                - main
                - develop
      - lint_and_format:
          name: Lint & formatting
          filters:
            branches:
              ignore:
                - main
                - develop
      # OSS Scanning for PR branches
      - security-oss:
          name: Snyk Open Source
          context:
            - snyk-iac-seceng
          monitor-on-build: false
          filters:
            branches:
              ignore:
                - main
                - develop
      # OSS Scanning for trunk branches (with monitor)
      - security-oss:
          name: Snyk Open Source (<< pipeline.git.branch >>)
          monitor-on-build: true
          context:
            - snyk-iac-seceng
          filters:
            branches:
              only:
                - main
                - develop
      - security-code:
          name: Snyk Code
          context:
            - snyk-iac-seceng
      - regression-test:
          name: Regression Test
          filters:
            branches:
              ignore:
                - main
                - develop
