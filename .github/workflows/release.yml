name: Release SDK

on:
  push:
    branches:
      - 'main'

permissions:
  contents: write

jobs:
  release:

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - uses: actions/setup-go@v2
        with:
          go-version: 1.17

      - name: Login to Docker
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Check for new GitHub tag
        run: |
          # Compute new tag from commit message
          echo 'deb [trusted=yes] https://apt.fury.io/caarlos0/ /' | sudo tee /etc/apt/sources.list.d/caarlos0.list
          sudo apt update
          sudo apt install svu=1.7.0
          NEW_TAG=$(svu)
          if [ $(git tag -l "$NEW_TAG") ]; then
              echo "Tag already exists!"
          else
              echo "NEW_TAG=${NEW_TAG}" >> $GITHUB_ENV
          fi
      - name: Check tag presence
        id: checktag
        shell: bash
        run: |
          if [ "$NEW_TAG" == "" ]; then
            echo ::set-output name=tagpresent::false
          else
            echo ::set-output name=tagpresent::true
          fi

      - name: Push a new GitHub tag
        if: ${{ steps.checktag.outputs.tagpresent }}
        run: |
          # Hard-code user config
          git config user.email "snyksec@users.noreply.github.com"
          git config user.name "Snyk"

          # Push new tag
          git tag -a "${NEW_TAG}" -m "Release ${NEW_TAG}"
          git push origin "${NEW_TAG}"

      - name: Push a new GitHub release
        if: ${{ steps.checktag.outputs.tagpresent }}
        uses: goreleaser/goreleaser-action@v2
        with:
          args: release --rm-dist
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SNYK_ACCESS_TOKEN: ${{ secrets.SNYK_ACCESS_TOKEN }}

      - uses: actions/setup-node@v2
        if: ${{ steps.checktag.outputs.tagpresent }}
        with:
          node-version: '12.x'
          registry-url: 'https://registry.npmjs.org'
      - run: ./scripts/release-npm.sh --tag="${{ env.NEW_TAG }}"
        if: ${{ steps.checktag.outputs.tagpresent }}
      - run: npm publish
        if: ${{ steps.checktag.outputs.tagpresent }}
        working-directory: dist
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
